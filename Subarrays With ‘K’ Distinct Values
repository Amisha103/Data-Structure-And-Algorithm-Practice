Subarrays With ‘K’ Distinct Values
Moderate
80/80
Average time to solve is 15m
Contributed by
Asked in companies
Problem statement
You are given an array ‘ARR’ having ‘N’ integers. You are also given an integer ‘K’. The task is to count the number of subarrays that have ‘K’ distinct values.



Subarray: A consecutive sequence of one or more values taken from an array.



For Example :
‘N’ = 4, ‘K’ = 2
‘ARR’ = [1, 1, 2, 3]

There are ‘3’ subarrays with ‘2’ distinct elements, which are as follows: [1, 2], [2, 3], [1, 1, 2].
Thus, you should return ‘3’ as the answer.
Detailed explanation ( Input/output format, Notes, Images )
Sample Input 1 :
5 2
2 1 3 2 4
Sample Output 1 :
9
Explanation of Sample Input 1 :
There are ‘4’ subarrays with exactly ‘2’ distinct elements, which are as follows: [2, 1], [1, 3], [3, 2], [2, 4].

Thus, you should return ‘4’ as the answer.
Sample Input 2 :
5 4
1 2 3 4 5
Sample Output 2 :
2
Constraints :
1 <= K <= N <= 10^5
1 <= Value in each element of ‘ARR’ <= 10^9

Time limit: 1 second


Solution-
import java.util.HashMap;

public class Solution {
    public static int kDistinctSubarrays(int[] arr, int n, int k) {
     return find(arr, n , k) - find(arr, n, k - 1);
    }
    static int find(int[] arr, int n, int k)
    {
HashMap<Integer, Integer> map = new HashMap<>();
int cnt = 0;
   int start = 0;
   int end = 0;
   while(end < n)
    {
        map.put(arr[end], map.getOrDefault(arr[end], 0) + 1);
while(map.size() > k)
{

map.put(arr[start], map.get(arr[start] ) - 1);
if(map.get(arr[start]) == 0)
{
    map.remove(arr[start]);
}
start++;

}

cnt = cnt + (end - start);
end++;
    }
   
    return cnt;
    }
}
