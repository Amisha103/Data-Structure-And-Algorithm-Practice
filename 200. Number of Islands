200. Number of Islands
Solved
Medium
Topics
Companies
Given an m x n 2D binary grid grid which represents a map of '1's (land) and '0's (water), return the number of islands.

An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.

 

Example 1:

Input: grid = [
  ["1","1","1","1","0"],
  ["1","1","0","1","0"],
  ["1","1","0","0","0"],
  ["0","0","0","0","0"]
]
Output: 1
Example 2:

Input: grid = [
  ["1","1","0","0","0"],
  ["1","1","0","0","0"],
  ["0","0","1","0","0"],
  ["0","0","0","1","1"]
]
Output: 3
 

Constraints:

m == grid.length
n == grid[i].length
1 <= m, n <= 300
grid[i][j] is '0' or '1'.

Solution-
class Solution {
    public int numIslands(char[][] grid) {
        boolean vis[][] = new boolean[grid.length][grid[0].length];
int cnt = 0;
        for(int i = 0;i < grid.length;i++){
            for(int j = 0;j < grid[0].length;j++)
            {
                if(grid[i][j] == '1' && !vis[i][j])
                {
                     
                    bfs(grid, vis, i, j);
                     cnt++;
                  
                }
            }
        }
        return cnt;
    }
    void bfs(char[][]grid, boolean vis[][], int i, int j)
    {
Queue<Pair> q = new LinkedList<>();
q.add(new Pair(i, j));
while(!q.isEmpty())
{
    int col = q.peek().col;
    int row = q.peek().row;
    vis[row][col] = true;
    q.poll();
    int[] dr = {-1, 0, 1, 0};
    int [] dc = {0, 1, 0, -1};
    for(int x = 0;x < 4;x++)
    {
        int r = row + dr[x];
        int c = col + dc[x];
        if(isValid(grid, r, c, vis))
        {
            vis[r][c] = true;
            q.add(new Pair(r, c));
        }
    }
}


    }
    boolean isValid(char[][] grid, int i, int j, boolean vis[][])
    {
if(i >= grid.length || j >= grid[0].length ||i < 0 ||j < 0 || grid[i][j] != '1' || vis[i][j])
{
    return false;
}
return true;
    }
    
}
class Pair
{
    int col;
    int row;
    Pair(int row, int col)
    {
        this.col = col;
        this.row = row;
    }
}
