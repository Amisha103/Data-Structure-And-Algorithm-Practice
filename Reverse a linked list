Reverse a linked list
Difficulty: EasyAccuracy: 73.11%Submissions: 312K+Points: 2
Given the head of a linked list, the task is to reverse this list and return the reversed head.

Examples:

Input: Linked list: 1->2->3->4->5->6
Output: 6->5->4->3->2->1
Explanation:

Input: Linked list: 2->7->10->9->8 
Output: 8->9->10->7->2
Explanation:

Input: Linked List: 10
Output: 10
Explanation: For a single node list, the reverse would be same as original
Expected Time Complexity: O(n)
Expected Space Complexity: O(1)

Constraints:
1 <= number of nodes, data of nodes <= 105


Solution-

class Solution {
    // Function to reverse a linked list.
    Node reverseList(Node head) {
       Node temp = head;
       Node prev = null;
      while(temp != null)
      {
          Node t = temp.next;
          temp.next = prev;
          prev = temp;
          temp = t;
      }
      return prev;
    }
}
